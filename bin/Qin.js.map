{"version":3,"sources":["../src/Qin.js"],"names":["Qin","props","_renderer","Renderer","canvasElement","canvas","_initRedux","_createNewWorld","db","PouchDB","_store","subscribe","console","log","getState","dispatch"],"mappings":";;;;;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;IAMMA,G;AAIL,cAAYC,KAAZ,EAAiC;AAAA;;AAChC,OAAKC,SAAL,GAAiB,IAAIC,kBAAJ,CAAa,EAACC,eAAeH,MAAMI,MAAtB,EAAb,CAAjB;;AAEA,OAAKC,UAAL;;AAEA,OAAKC,eAAL;AACA;;;;oCAEiB;AACjB,OAAMC,KAAK,IAAIC,iBAAJ,CAAY,OAAZ,CAAX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;+BAEW;AAAA;;AACX,QAAKC,MAAL,GAAc,2BAAd;AACA,QAAKA,MAAL,CAAYC,SAAZ,CAAsB;AAAA,WACrBC,QAAQC,GAAR,CAAY,MAAKH,MAAL,CAAYI,QAAZ,EAAZ,CADqB;AAAA,IAAtB;;AAIA,QAAKJ,MAAL,CAAYK,QAAZ,CAAqB,8BAArB;AACA;;;2BAEQ,CACR;;;;;;kBAGaf,G","file":"Qin.js","sourcesContent":["//@flow\r\nimport Renderer from './render/renderer';\r\nimport PouchDB from 'pouchdb';\r\nimport { initStore } from './reduxCore/storeUtil';\r\nimport { storeInit } from './reduxCore/actions/storeActions';\r\n\r\ntype QinPropsType = {\r\n\tcanvas: HTMLCanvasElement,\r\n};\r\n\r\nclass Qin {\r\n\t_renderer: Renderer;\r\n\t_store: ReduxStore;\r\n\r\n\tconstructor(props: QinPropsType) {\r\n\t\tthis._renderer = new Renderer({canvasElement: props.canvas});\r\n\r\n\t\tthis._initRedux();\r\n\r\n\t\tthis._createNewWorld();\r\n\t}\r\n\r\n\t_createNewWorld() {\r\n\t\tconst db = new PouchDB('qindb');\r\n\t\t//\r\n\t\t// db.get('dave@gmail.com').then(function (doc) {\r\n\t\t//     console.log(doc);\r\n\t\t// });\r\n\t\t//\r\n\t\t// db.changes().on('change', function() {\r\n\t\t//     console.log('Changes');\r\n\t\t// });\r\n\t\t//\r\n\t\t//db.replicate.to('qin');\r\n\t}\r\n\r\n\t_initRedux(){\r\n\t\tthis._store = initStore();\r\n\t\tthis._store.subscribe(() =>\r\n\t\t\tconsole.log(this._store.getState())\r\n\t\t);\r\n\r\n\t\tthis._store.dispatch(storeInit());\r\n\t}\r\n\r\n\trender() {\r\n\t}\r\n}\r\n\r\nexport default Qin;\r\n"]}